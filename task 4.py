#Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

#первый вариант через возведение в степень
try:
    def my_func(x,y):
        if (x<=0 and y>=0) or x<=0 or y>=0:
            print('Условия введения не выполнены, введите правильные данные.')
        else:
            z=round(x**y, 3)
            return z
    print(f'Результат возведения в степень',my_func(int(input('Введите число: ')), int(input('Введите отрицательное число: '))))
except ValueError:
    print('Ошибка. Введите числа')
# вариант второй
try:
    def my_func(x, y):
        return 1 / (abs(x) ** abs(y))
    print(f'Результат возведения в степень',my_func(int(input('Введите число: ')), int(input('Введите отрицательное число:'))))
except ValueError:
    print('Ошибка. Введите числа')

#второй вариант через цикл
try:
    def my_func(x,y):
        n=1
        for i in range(abs(y)):
            n *= x
            return 1 / x
    print(f'Результат возведения в степень',my_func(int(input('Введите число: ')), int(input('Введите отрицательное число: '))))
except ValueError:
    print('Ошибка. Введите числа')

#идея рекурентности x^(y) = x*x^(y-1)
try:
    def my_func(x, y):
        if y == 0:
            return 1
        else:
            return x*x**(y - 1)
    print(f'Результат возведения в степень',my_func(int(input('Введите число: ')), int(input('Введите отрицательное число: '))))
except ValueError:
    print('Ошибка. Введите числа')